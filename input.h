//=============================================================================
//
// 入力処理(input.h)
// Author : 唐﨑結斗
// 概要 : オブジェクト生成を行う
//
//=============================================================================
#ifndef _INPUT_H_		// このマクロ定義がされてなかったら
#define _INPUT_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// ライブラリーリンク
//*****************************************************************************
#pragma comment(lib,"dinput8.lib")		// 入力処理に必要

//*****************************************************************************
// インクルード
//*****************************************************************************
#define DIRECTINPUT_VERSION		(0x0800)	// ビルド時の警告対処用マクロ
#include "dinput.h"							// 入力処理に必要

//***************************************************************************
// マクロ定義
//***************************************************************************
// キーの最大数
#define NUM_KEY_MAX		(0x100)	

//=============================================================================
// 入力クラス
// Author : 唐﨑結斗
// 概要 : 入力を行うクラス
//=============================================================================
class CInput
{
public:
	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CInput();
	virtual ~CInput() = 0;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	virtual HRESULT Init(HINSTANCE hInstance, HWND hWnd) = 0;					// 初期化
	virtual void Uninit(void);													// 終了
	virtual void Update(void) = 0;												// 更新
	virtual bool GetPress(int nKey) = 0;										// プレス情報の取得
	virtual bool GetTrigger(int nKey) = 0;										// トリガー情報の取得
	virtual bool GetRelease(int nKey) = 0;										// リリース情報の取得
	LPDIRECTINPUTDEVICE8 GetDevice() { return m_pDevice; }						// Deviceの取得
	LPDIRECTINPUT8 GetInput() { return m_pInput; }								// インプットオブジェクトのゲッター
	void SetDevice(LPDIRECTINPUTDEVICE8 pDevice) { m_pDevice = pDevice; }		// Deviceのセッター
	void SetInput(LPDIRECTINPUT8 pInput) { m_pInput = pInput; }					// インプットのセッター

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	LPDIRECTINPUTDEVICE8		m_pDevice;			// 入力デバイスへのポインタ
	LPDIRECTINPUT8				m_pInput;			// DirectInputオブジェクトへのポインタ
};

#endif
