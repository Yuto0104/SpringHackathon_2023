//****************************************************************************************************************
//
// クライアントのTCP送受信処理(tcp_client.h)
// Auther : 唐﨑結斗
// 概要 : クライアントTCP送受信クラスの管理
//
//****************************************************************************************************************
#ifndef _TCP_CLIENT_H_			// このマクロ定義がされてなかったら
#define _TCP_CLIENT_H_			// 二重インクルード防止のマクロ定義

//***************************************************************************
// インクルード
//***************************************************************************
#include "main.h"

//***************************************************************
// 定数定義
//***************************************************************
const unsigned int USE_NUM_PORT = (22333);
const unsigned int MAX_STRING = (10240);

//============================================================================
// クライアントTCP送受信クラス
// Auther : 唐﨑結斗
// 概要 : クライアントTCP送受信を行うためのクラス
//============================================================================
class CTCPClient
{
public:
	//===========================================================
	// コンストラクタとデストラクタ
	//===========================================================
	CTCPClient();
	~CTCPClient();

	//===========================================================
	// メンバ関数
	//===========================================================
	bool Init(const char *pIpAddres, int nPortNum);			// 初期化
	bool Init(SOCKET sock);									// オーバーロードされた初期化
	int Send(char *pSendData, int nSendDataSize);			// 送信
	int Recv(char *pRecvData, int nRecvDataSize);			// 受信
	void Uninit(void);										// 終了						

private:
	//===========================================================
	// メンバ変数
	//===========================================================
	SOCKET					m_sock;					// 通信用ソケット
	struct sockaddr_in		m_addr;					// 接続受付準備用変数
};

#endif