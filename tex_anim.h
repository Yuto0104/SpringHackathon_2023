//=============================================================================
//
// テクスチャアニメーション処理(tex_anim.h)
// Author : 唐﨑結斗
// 概要 : テクスチャーアニメーションを計算する
//
//=============================================================================
#ifndef _TEX_ANIM_H_		// このマクロ定義がされてなかったら
#define _TEX_ANIM_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "main.h"

//=============================================================================
// テクスチャアニメーションクラス
// Author : 唐﨑結斗
// 概要 : テクスチャーアニメーションを計算する
//=============================================================================
class CTexAnim
{
public:
	//--------------------------------------------------------------------
	// TEX_PATTERN変数の追加
	// Author : 唐﨑結斗
	// 概要 : テクスチャアニメーションのパターン数設定に使用
	//--------------------------------------------------------------------
	struct TEX_PATTERN
	{
		// 変数宣言
		int   x, y;
	};

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CTexAnim();
	virtual ~CTexAnim();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void SetAnim(int nPatternAnimX, int nPatternAnimY, int nLife, bool bLoop);		// アニメーションの初期設定
	void PlayAnim();																// アニメーションの再生
	TEX_PATTERN GetNumAnim() { return m_numAnim; }									// アニメーションのパターンNo.のゲッター
	D3DXVECTOR2 GetAddTex() { return m_addTex; }									// テクスチャ座標の増加量のゲッター

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	TEX_PATTERN		m_patternAnim;			// アニメーションのパターン
	TEX_PATTERN		m_numAnim;				// アニメーションのパターンNo.
	D3DXVECTOR2		m_addTex;				// テクスチャ座標の増加量
	int				m_nMaxCntAnim;			// アニメーションの切り替え
	int				m_nCntAnim;				// アニメーションカウント
	bool			m_bLoop;				// ループの使用状況
};

#endif
