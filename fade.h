//=============================================================================
//
// フェードクラス(fade.h)
// Author : 唐﨑結斗
// 概要 : フェード生成を行う
//
//=============================================================================
#ifndef _FADE_H_		// このマクロ定義がされてなかったら
#define _FADE_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object2D.h"
#include "application.h"

//=============================================================================
// フェードクラス
// Author : 唐﨑結斗
// 概要 : フェード生成を行うクラス
//=============================================================================
class CFade : public CObject2D
{
public:
	//--------------------------------------------------------------------
	// 定数定義
	//--------------------------------------------------------------------
	static const unsigned int FADE_TIME = 40;

	//--------------------------------------------------------------------
	// フェードモードの列挙型
	// Author : 唐﨑結斗
	// 概要 : フェードモードを識別する
	//--------------------------------------------------------------------
	enum FADE_MODE
	{
		FADE_NONE = 0,				// フェード無し
		FADE_IN,					// フェードイン
		FADE_OUT,					// フェードアウト
	};

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	// フェードの生成
	static CFade *Create();

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	explicit CFade(int nPriority = PRIORITY_LEVEL4);
	~CFade() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;											// 初期化
	void Uninit() override;												// 終了
	void Update() override;												// 更新
	void Draw() override;												// 描画
	void SetFade(CApplication::SCENE_MODE mode);						// フェードのセッター
	void SetFadeFrame(int nFadeFrame) { m_nFadeFrame = nFadeFrame; }	// フェード完了までの時間設定
	bool GetFadeSituation() { return m_bFade; }							// フェードを行っているかのゲッター

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void FadeIn();					// フェードイン
	void FadeOut();					// フェードアウト

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	FADE_MODE					m_fadeMode;				// フェードモード
	CApplication::SCENE_MODE	m_mode;					// シーン
	float						m_fAlpha;				// アルファ値
	int							m_nFadeFrame;			// フェード完了までの時間
	bool						m_bFade;				// フェードを行っているかどうか
};

#endif

