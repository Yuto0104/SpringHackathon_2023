//=============================================================================
//
// テクスチャ設定処理(texture.h)
// Author : 唐﨑結斗
// 概要 : テクスチャ設定を行う
//
//=============================================================================
#ifndef _TEXTURE_H_		// このマクロ定義がされてなかったら
#define _TEXTURE_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "main.h"

//=============================================================================
// テクスチャクラス
// Author : 唐﨑結斗
// 概要 : テクスチャ設定を行うクラス
//=============================================================================
class CTexture
{
public:
	//*****************************************************************************
	// 定数定義
	//*****************************************************************************
	static const unsigned int MAX_NAME = (0x100);

	struct TEXTURE
	{
		LPDIRECT3DTEXTURE9		pTexture;					// テクスチャ情報
		char					aFileName[MAX_NAME];		// ファイル名
	};

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CTexture();
	~CTexture();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	// 初期化
	void Init(void);

	// 終了
	void Uninit(void);		

	// テクスチャのゲッター
	LPDIRECT3DTEXTURE9 GetTexture(const int nNumTex);

	// テクスチャの最大数
	int GetMaxTexture() { return m_nMaxTexture; }

	// テクスチャ情報のゲッター
	TEXTURE *GetTextureData() { return m_pTexture; }

	// ファイルの読み込み
	void LoadFile();

private:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	TEXTURE		*m_pTexture;		// テクスチャ情報
	int			m_nMaxTexture;		// テクスチャの最大数
	
};

#endif

