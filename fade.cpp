//=============================================================================
//
// フェードクラス(fade.cpp)
// Author : 唐﨑結斗
// 概要 : フェード生成を行う
//
//=============================================================================

//*****************************************************************************
// インクルード
//*****************************************************************************
#include <assert.h>

#include "fade.h"
#include "renderer.h"
#include "application.h"

//=============================================================================
// インスタンス生成
// Author : 唐﨑結斗
// 概要 : 2Dバレットを生成する
//=============================================================================
CFade *CFade::Create()
{
	// オブジェクトインスタンス
	CFade *pFade = nullptr;

	pFade = new CFade;

	// メモリの確保ができなかった
	assert(pFade != nullptr);

	// 数値の初期化
	pFade->Init();

	// インスタンスを返す
	return pFade;
}

//=============================================================================
// コンストラクタ
// Author : 唐﨑結斗
// 概要 : インスタンス生成時に行う処理
//=============================================================================
CFade::CFade(int nPriority) : CObject2D(nPriority)
{
	m_fadeMode = FADE_NONE;				// フェードモード
	m_mode = CApplication::MODE_NONE;	// シーンモード				
	m_fAlpha = 0.0f;					// アルファ値
	m_nFadeFrame = 0;					// フェード完了までの時間
	m_bFade = false;					// フェードを行っているかどうか

	// オブジェクトのタイプ設定
	SetObjType(OBJTYPE_FADE);
}

//=============================================================================
// デストラクタ
// Author : 唐﨑結斗
// 概要 : インスタンス終了時に行う処理
//=============================================================================
CFade::~CFade()
{

}

//=============================================================================
// 初期化
// Author : 唐﨑結斗
// 概要 : テクスチャの設定し、メンバ変数の初期値を設定
//=============================================================================
HRESULT CFade::Init()
{
	// オブジェクト2Dの初期化
	CObject2D::Init();

	// フェード完了までの時間
	m_nFadeFrame = FADE_TIME;
	m_bFade = false;

	// 頂点バッファの設定
	SetPos(D3DXVECTOR3(640.0f, 360.0f, 0.0f));
	SetSize(D3DXVECTOR3((float)CRenderer::SCREEN_WIDTH, (float)CRenderer::SCREEN_HEIGHT, 0.0f));
	SetCol(D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f));

	// テクスチャの設定
	LoadTex(-1);

	// テクスチャ座標の設定
	SetTex(D3DXVECTOR2(0.0f, 0.0f), D3DXVECTOR2(1.0f / 10, 1.0f));

	// 生存フラグ
	SetPermanent(true);

	return S_OK;
}

//=============================================================================
// 終了
// Author : 唐﨑結斗
// 概要 : テクスチャのポインタと頂点バッファの解放
//=============================================================================
void CFade::Uninit()
{// オブジェクト2Dの終了
	CObject2D::Uninit();
}

//=============================================================================
// 更新
// Author : 唐﨑結斗
// 概要 : 2D更新を行う
//=============================================================================
void CFade::Update()
{
	switch (m_fadeMode)
	{
	case CFade::FADE_NONE:
		break;

	case CFade::FADE_IN:
		FadeIn();
		break;

	case CFade::FADE_OUT:
		FadeOut();
		break;

	default:
		assert(false);
		break;
	}

	// オブジェクト2Dの更新
	CObject2D::Update();
}

//=============================================================================
// 描画
// Author : 唐﨑結斗
// 概要 : 2D描画を行う
//=============================================================================
void CFade::Draw()
{// プレイヤー2Dの描画
	CObject2D::Draw();
}

//=============================================================================
// フェードモードの設定
// Author : 唐﨑結斗
// 概要 : フェードモードの設定を行う
//=============================================================================
void CFade::SetFade(CApplication::SCENE_MODE mode)
{
	if (m_fadeMode == FADE_NONE)
	{
		m_bFade = true;
		m_fadeMode = FADE_IN;
		m_fAlpha = 0.0f;
		m_mode = mode;
	}	
}

//=============================================================================
// フェードイン
// Author : 唐﨑結斗
// 概要 : フェードを行う
//=============================================================================
void CFade::FadeIn()
{
	m_fAlpha += 1.0f / m_nFadeFrame;

	SetCol(D3DXCOLOR(0.0f, 0.0f, 0.0f, m_fAlpha));

	if (m_fAlpha >= 1.0f)
	{
		m_fAlpha = 1.0f;
		CApplication::SetMode(m_mode);
		m_fadeMode = FADE_OUT;
	}
}

//=============================================================================
// フェードアウト
// Author : 唐﨑結斗
// 概要 : フェードを行う
//=============================================================================
void CFade::FadeOut()
{
	m_fAlpha -= 1.0f / m_nFadeFrame;

	SetCol(D3DXCOLOR(0.0f, 0.0f, 0.0f, m_fAlpha));

	if (m_fAlpha <= 0.0f)
	{
		m_fAlpha = 0.0f;
		m_fadeMode = FADE_NONE;
		m_bFade = false;
	}
}
