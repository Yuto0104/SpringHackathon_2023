//=============================================================================
//
// レンダラークラス(renderer.h)
// Author : 唐﨑結斗
// 概要 : 描画を行うクラス
//
//=============================================================================
#ifndef _RENDERER_H_		// このマクロ定義がされてなかったら
#define _RENDERER_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// ライブラリーリンク
//*****************************************************************************
#pragma comment(lib,"d3d9.lib")			// 描画処理に必要
#pragma comment(lib,"d3dx9.lib")		// [d3d9.lib]の拡張ライブラリ
#pragma comment(lib,"dxguid.lib")		// DirectXのコンポネート(部品)の使用に必要

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "d3dx9.h"							// 描画処理に必要

//=============================================================================
// レンダラークラス(renderer.h)
// Author : 唐﨑結斗
// 概要 : 描画を行うクラス
//=============================================================================
class CRenderer
{
public:
	//*****************************************************************************
	// 定数定義
	//*****************************************************************************
	static const int SCREEN_WIDTH = 1280;			// スクリーンの幅
	static const int SCREEN_HEIGHT = 720;			// スクリーンの高さ

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CRenderer();
	~CRenderer();

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init(HWND hWnd, bool bWindow);
	void Uninit();
	void Update();
	void Draw();
	void SetStencil(const int nStencilTest, D3DCMPFUNC EStencilFunc);
	void SetStencilMask(const int nStencilTest, D3DCMPFUNC EStencilFunc);
	LPDIRECT3DDEVICE9 GetDevice() { return m_pD3DDevice; }

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
#ifdef _DEBUG
	void DrawFPS();
#endif // _DEBUG

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	LPDIRECT3D9						m_pD3D;				// Direct3Dオブジェクト
	LPDIRECT3DDEVICE9				m_pD3DDevice;		// Deviceオブジェクト

#ifdef _DEBUG
	// フォント
	LPD3DXFONT	m_pFont;
#endif // _DEBUG
};

#endif
