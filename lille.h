//=============================================================================
//
// 2Dリール(lille.h)
// Author : 唐﨑結斗
// 概要 : 2Dリール生成を行う
//
//=============================================================================
#ifndef _LILLE_H_		// このマクロ定義がされてなかったら
#define _LILLE_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object2D.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CNumber;

//=============================================================================
// 2Dリールクラス
// Author : 唐﨑結斗
// 概要 : 2Dリール生成を行うクラス
//=============================================================================
class CLille : public CObject2D
{
public:
	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	// 2Dリールの生成
	static CLille *Create();

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	explicit CLille(int nPriority = CObject::PRIORITY_LEVEL3);
	~CLille() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;									// 初期化
	void Uninit() override;										// 終了
	void Update() override;										// 更新
	void Draw() override;										// 描画
	void SetLille(D3DXVECTOR3 pos , D3DXVECTOR3 size);			// リールの設定
	void StopScroll() { m_bScroll = false; 
						m_nCntFrame = 0; }					// スクロールの停止
	bool GetScroll() { return m_bScroll; }

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void Scroll();

	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	CNumber *m_pNumDest;		// 目標の番号
	CNumber *m_pNumber;			// 番号
	int m_nNumDest;				// 目標の番号
	int m_nNumber;				// 目標の番号
	int m_nCntFrame;			// フレームカウント
	bool m_bScroll;				// スクロール
};

#endif
