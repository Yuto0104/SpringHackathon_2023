//=============================================================================
//
// スキルクラス(skill.h)
// Author : 髙野馨將
// 概要 : スキル生成を行う
//
//=============================================================================
#ifndef _SKILL_H_		// このマクロ定義がされてなかったら
#define _SKILL_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "object3D.h"

//*****************************************************************************
//	前方宣言
//*****************************************************************************
class CCollision_Rectangle3D;

//=============================================================================
// スキルクラス
// Author : 唐﨑結斗
// 概要 : スキル生成を行うクラス
//=============================================================================
class CSkill : public CObject3D
{
public:
	//--------------------------------------------------------------------
	// スキルの種別の列挙型
	// Author : 髙野馨將
	// 概要 : スキルの種別情報を格納
	//--------------------------------------------------------------------
	enum ESkillType
	{
		SKILL_NONE = 0,				// タイプ無し
		SKILL_FORCE_FIELD,			// バリア
		SKILL_MINE,					// 地雷
		SKILL_MISSILE,				// ミサイル
		MAX_SKILL,					// スキルの最大数
	};

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CSkill *Create(void);				// スキルの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CSkill();
	~CSkill();

	//--------------------------------------------------------------------
	// オーバーライド関数
	//--------------------------------------------------------------------
	HRESULT Init() override;								// 初期化
	void Uninit() override;									// 終了
	void Update() override;									// 更新
	void Draw() override;									// 描画

protected:
	//--------------------------------------------------------------------
	// メンバ変数
	//--------------------------------------------------------------------
	CCollision_Rectangle3D *m_pCollisionRectangle3D;        // 3D矩形の当たり判定
};

#endif